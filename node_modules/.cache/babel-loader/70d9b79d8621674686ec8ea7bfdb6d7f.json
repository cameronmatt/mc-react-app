{"ast":null,"code":"var _jsxFileName = \"/Users/admin/development/code/mc-react-app/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  products\n}) => {\n  _s();\n\n  const newProducts = products.map(prod => prod.title);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleInputChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleClearCLick = () => {\n    setSearchValue(\"\");\n  };\n\n  const shouldDisplayButton = searchValue.length > 0;\n  const filteredProducts = props.products.title.filter(product => {\n    return product.includes(searchValue);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), shouldDisplayButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearCLick,\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredProducts.map(product => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: product\n        }, product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"F12Wsjogj0HVecr0VGWn/MCEg+A=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/admin/development/code/mc-react-app/src/components/SearchBar.js"],"names":["React","useState","SearchBar","products","newProducts","map","prod","title","searchValue","setSearchValue","handleInputChange","event","target","value","handleClearCLick","shouldDisplayButton","length","filteredProducts","props","filter","product","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC9B,QAAMC,WAAW,GAAGD,QAAQ,CAACE,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACC,KAA1B,CAApB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMS,iBAAiB,GAAIC,KAAD,IAAW;AACjCF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GAFD;;AAIA,QAAMM,mBAAmB,GAAGP,WAAW,CAACQ,MAAZ,GAAqB,CAAjD;AAEA,QAAMC,gBAAgB,GAAGC,KAAK,CAACf,QAAN,CAAeI,KAAf,CAAqBY,MAArB,CAA6BC,OAAD,IAAa;AAC9D,WAAOA,OAAO,CAACC,QAAR,CAAiBb,WAAjB,CAAP;AACH,GAFwB,CAAzB;AAIA,sBACA;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEA,WAA1B;AAAuC,MAAA,QAAQ,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKK,mBAAmB,iBAAI;AAAQ,MAAA,OAAO,EAAED,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF5B,eAII;AAAA,gBACKG,gBAAgB,CAACZ,GAAjB,CAAsBe,OAAD,IAAa;AAC/B,4BAAO;AAAA,oBAAmBA;AAAnB,WAASA,OAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcH,CAjCD;;GAAMlB,S;;KAAAA,S;AAmCN,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react'\n\n\nconst SearchBar = ({products}) => {\n    const newProducts = products.map(prod => prod.title)\n    \n    const [searchValue, setSearchValue] = useState(\"\")\n\n    const handleInputChange = (event) => {\n        setSearchValue(event.target.value)\n    }\n\n    const handleClearCLick = () => {\n        setSearchValue(\"\")\n    }\n\n    const shouldDisplayButton = searchValue.length > 0\n\n    const filteredProducts = props.products.title.filter((product) => {\n        return product.includes(searchValue)\n    })\n\n    return (\n    <div>\n        <input type=\"text\" value={searchValue} onChange={handleInputChange} />\n        {shouldDisplayButton && <button onClick={handleClearCLick}>clear</button>}\n        \n        <ul>\n            {filteredProducts.map((product) => {\n                return <li key={product}>{product}</li>\n            })}\n        </ul>\n        \n\n    </div>\n    )\n}\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}