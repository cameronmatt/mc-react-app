{"ast":null,"code":"var _jsxFileName = \"/Users/admin/development/code/mc-react-app/src/App.js\";\nimport React from \"react\"; //import ProductCard from \"./components/ProductCard\"\n//import Home from \"./components/Home\"\n//import SearchBar from \"./components/SearchBar\"\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchProducts = () => {\n      let url = 'https://fakestoreapi.com/products';\n      fetch(url).then(response => response.json()).then(data => {\n        //this.storeProducts()\n        this.setState({\n          products: data\n        });\n        console.log('fetch', data);\n      }).catch(firstGetError => console.log(firstGetError));\n    };\n\n    this.storeProducts = data => {\n      let productDB = 'http://localhost:3000/products/';\n      fetch(productDB, {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        this.displayProducts();\n        console.log('save', data);\n      }).catch(postError => console.log(postError));\n    };\n\n    this.displayProducts = () => {\n      let productDB = 'http://localhost:3000/products/';\n      fetch(productDB).then(response => response.json()).then(data => {\n        this.setState({\n          products: data\n        });\n        console.log('display', data);\n      }).catch(secondGetError => console.log(secondGetError));\n    };\n\n    this.state = {\n      products: []\n    };\n  } // Waits for components to mount then fetches data via api\n\n\n  componentDidMount() {\n    this.fetchProducts();\n  } //fetches data, converts to json and resets the state\n\n\n  render() {\n    console.log(\"state\", this.state.products);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/development/code/mc-react-app/src/App.js"],"names":["React","App","Component","constructor","fetchProducts","url","fetch","then","response","json","data","setState","products","console","log","catch","firstGetError","storeProducts","productDB","method","headers","body","JSON","stringify","displayProducts","postError","secondGetError","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWZC,aAXY,GAWI,MAAM;AACpB,UAAIC,GAAG,GAAG,mCAAV;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAEF;AAAX,SAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,IAApB;AAED,OAPH,EAQGK,KARH,CAQSC,aAAa,IAAIH,OAAO,CAACC,GAAR,CAAYE,aAAZ,CAR1B;AASD,KAtBW;;AAAA,SAwBZC,aAxBY,GAwBKP,IAAD,IAAU;AACxB,UAAIQ,SAAS,GAAG,iCAAhB;AACAZ,MAAAA,KAAK,CAACY,SAAD,EAAY;AACfC,QAAAA,MAAM,EAAE,MADO;AAEfC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAFM;AAMfC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AANS,OAAZ,CAAL,CAQCH,IARD,CAQOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARnB,EASCF,IATD,CASMG,IAAI,IAAI;AACZ,aAAKc,eAAL;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBJ,IAAnB;AACD,OAZD,EAaCK,KAbD,CAaOU,SAAS,IAAIZ,OAAO,CAACC,GAAR,CAAYW,SAAZ,CAbpB;AAcD,KAxCW;;AAAA,SA0CZD,eA1CY,GA0CM,MAAM;AACtB,UAAIN,SAAS,GAAG,iCAAhB;AACAZ,MAAAA,KAAK,CAACY,SAAD,CAAL,CACCX,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAEF;AAAX,SAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBJ,IAAtB;AACD,OALD,EAMCK,KAND,CAMOW,cAAc,IAAIb,OAAO,CAACC,GAAR,CAAYY,cAAZ,CANzB;AAOH,KAnDa;;AAEZ,SAAKC,KAAL,GAAa;AACXf,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GAP+B,CAQhC;;;AACAgB,EAAAA,iBAAiB,GAAE;AACjB,SAAKxB,aAAL;AACD,GAX+B,CAYhC;;;AA2CAyB,EAAAA,MAAM,GAAE;AACNhB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKa,KAAL,CAAWf,QAAhC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhE+B;;AAmElC,eAAeX,GAAf","sourcesContent":["import React from \"react\"\n//import ProductCard from \"./components/ProductCard\"\n//import Home from \"./components/Home\"\n//import SearchBar from \"./components/SearchBar\"\nimport \"./App.css\"\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      products: [],\n    }\n  }\n  // Waits for components to mount then fetches data via api\n  componentDidMount(){\n    this.fetchProducts();\n  }\n  //fetches data, converts to json and resets the state\n    fetchProducts = () => {\n      let url = 'https://fakestoreapi.com/products'\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          //this.storeProducts()\n          this.setState({products: data})\n          console.log('fetch',data)\n          \n        })\n        .catch(firstGetError => console.log(firstGetError))\n    }\n\n    storeProducts = (data) => {\n      let productDB = 'http://localhost:3000/products/'\n      fetch(productDB, {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data)\n      })\n      .then (response => response.json())\n      .then(data => {\n        this.displayProducts()\n        console.log('save',data)\n      })\n      .catch(postError => console.log(postError))\n    }\n\n    displayProducts = () => {\n      let productDB = 'http://localhost:3000/products/'\n      fetch(productDB)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({products: data})\n        console.log('display',data)\n      })\n      .catch(secondGetError => console.log(secondGetError))\n  }\n\n  render(){\n    console.log(\"state\", this.state.products)\n    return (\n      <div className=\"App\">\n        {/* <Home /> */}\n        {/* <ProductCard products={this.state.products}/> */}\n        {/* <SearchBar products={this.state.products} /> */}\n      </div>\n      )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}