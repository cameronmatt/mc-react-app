{"ast":null,"code":"var _jsxFileName = \"/Users/admin/development/code/mc-react-app/src/App.js\";\nimport React from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport ProductCard from \"./components/ProductCard\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.findProducts = () => {\n      let url = 'https://fakestoreapi.com/products';\n      fetch(url).then(response => response.json()).then(data => console.log(data)).then(SendProducts());\n    };\n\n    this.SendProducts = data => {\n      let productDB = '/Users/admin/development/code/mc-react-app/public/db.json';\n      fetch(productDB, {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => console.log(data));\n    };\n\n    this.state = {\n      products: []\n    };\n  } // Waits tof compoents to mount then fetches data via api\n\n\n  componentDidMount() {\n    this.findProducts();\n  } //fetches data, converts to json and resets the state\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ProductCard, {\n        products: this.state.products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/development/code/mc-react-app/src/App.js"],"names":["React","SearchBar","ProductCard","App","Component","constructor","findProducts","url","fetch","then","response","json","data","console","log","SendProducts","productDB","method","headers","body","JSON","stringify","state","products","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWZC,YAXY,GAWG,MAAM;AACnB,UAAIC,GAAG,GAAG,mCAAV;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFhB,EAGGH,IAHH,CAGQM,YAAY,EAHpB;AAID,KAjBW;;AAAA,SAmBZA,YAnBY,GAmBIH,IAAD,IAAU;AACvB,UAAII,SAAS,GAAG,2DAAhB;AACAR,MAAAA,KAAK,CAACQ,SAAD,EAAY;AACjBC,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAFQ;AAMjBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AANW,OAAZ,CAAL,CAOCH,IAPD,CAOOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPnB,EAQCF,IARD,CAQMG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CARd;AASD,KA9BW;;AAEZ,SAAKU,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GAP+B,CAQhC;;;AACAC,EAAAA,iBAAiB,GAAE;AACjB,SAAKlB,YAAL;AACD,GAX+B,CAYhC;;;AAwBAmB,EAAAA,MAAM,GAAE;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOC;;AA5C+B;;AA+ClC,eAAepB,GAAf","sourcesContent":["import React from \"react\"\nimport SearchBar from \"./components/SearchBar\"\nimport ProductCard from \"./components/ProductCard\"\nimport \"./App.css\"\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      products: [],\n    }\n  }\n  // Waits tof compoents to mount then fetches data via api\n  componentDidMount(){\n    this.findProducts();\n  }\n  //fetches data, converts to json and resets the state\n    findProducts = () => {\n      let url = 'https://fakestoreapi.com/products'\n      fetch(url)\n        .then(response => response.json())\n        .then(data => console.log(data))\n        .then(SendProducts())\n    }\n\n    SendProducts = (data) => {\n      let productDB = '/Users/admin/development/code/mc-react-app/public/db.json'\n      fetch(productDB, {\n      method: 'POST',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data)})\n      .then (response => response.json())\n      .then(data => console.log(data))\n    }\n\n\n\n  render(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <SearchBar />\n      <ProductCard products={this.state.products}/>\n    </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}