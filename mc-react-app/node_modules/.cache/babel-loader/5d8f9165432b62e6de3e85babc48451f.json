{"ast":null,"code":"var _jsxFileName = \"/Users/admin/development/code/mc-react-app/src/App.js\";\nimport React from \"react\";\nimport SearchBar from \"./components/SearchBar\"; //import ProductCard from \"./components/ProductCard\"\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchProducts = () => {\n      let url = 'https://fakestoreapi.com/products';\n      fetch(url).then(response => response.json()).then(data => {\n        this.storeProducts();\n        console.log('fetchs', data);\n      });\n    };\n\n    this.storeProducts = () => {\n      let productDB = 'http://localhost:3000/products';\n      fetch(productDB, {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        } //body: JSON.stringify(data)\n\n      }).then(response => response.json()).then(data => {\n        this.displayProducts();\n        console.log('save', data);\n      });\n    };\n\n    this.displayProducts = () => {\n      let productDB = 'http://localhost:3000/products';\n      fetch(productDB).then(response => response.json()).then(data => {\n        this.setState({\n          products: data\n        });\n        console.log('display', data);\n      });\n    };\n\n    this.state = {\n      products: []\n    };\n  } // Waits tof compoents to mount then fetches data via api\n\n\n  componentDidMount() {\n    this.fetchProducts();\n  } //fetches data, converts to json and resets the state\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/development/code/mc-react-app/src/App.js"],"names":["React","SearchBar","App","Component","constructor","fetchProducts","url","fetch","then","response","json","data","storeProducts","console","log","productDB","method","headers","displayProducts","setState","products","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWZC,aAXY,GAWI,MAAM;AACpB,UAAIC,GAAG,GAAG,mCAAV;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,aAAKC,aAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBH,IAArB;AACD,OALH;AAMD,KAnBW;;AAAA,SAqBZC,aArBY,GAqBI,MAAM;AACpB,UAAIG,SAAS,GAAG,gCAAhB;AACAR,MAAAA,KAAK,CAACQ,SAAD,EAAY;AACfC,QAAAA,MAAM,EAAE,MADO;AAEfC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAFM,CAMf;;AANe,OAAZ,CAAL,CAQCT,IARD,CAQOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARnB,EASCF,IATD,CASMG,IAAI,IAAI;AACZ,aAAKO,eAAL;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,IAAnB;AACD,OAZD;AAaD,KApCW;;AAAA,SAsCZO,eAtCY,GAsCM,MAAM;AACtB,UAAIH,SAAS,GAAG,gCAAhB;AACAR,MAAAA,KAAK,CAACQ,SAAD,CAAL,CACCP,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,aAAKQ,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAET;AAAX,SAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,IAAtB;AACD,OALD;AAMH,KA9Ca;;AAEZ,SAAKU,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GAP+B,CAQhC;;;AACAE,EAAAA,iBAAiB,GAAE;AACjB,SAAKjB,aAAL;AACD,GAX+B,CAYhC;;;AAsCAkB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA1D+B;;AA6DlC,eAAerB,GAAf","sourcesContent":["import React from \"react\"\nimport SearchBar from \"./components/SearchBar\"\n//import ProductCard from \"./components/ProductCard\"\nimport \"./App.css\"\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      products: [],\n    }\n  }\n  // Waits tof compoents to mount then fetches data via api\n  componentDidMount(){\n    this.fetchProducts();\n  }\n  //fetches data, converts to json and resets the state\n    fetchProducts = () => {\n      let url = 'https://fakestoreapi.com/products'\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          this.storeProducts()\n          console.log('fetchs',data)\n        })\n    }\n\n    storeProducts = () => {\n      let productDB = 'http://localhost:3000/products'\n      fetch(productDB, {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        //body: JSON.stringify(data)\n      })\n      .then (response => response.json())\n      .then(data => {\n        this.displayProducts()\n        console.log('save',data)\n      })\n    }\n\n    displayProducts = () => {\n      let productDB = 'http://localhost:3000/products'\n      fetch(productDB)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({products: data})\n        console.log('display',data)\n      })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <SearchBar />\n        {/* <ProductCard products={this.state.products}/> */}\n      </div>\n      )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}